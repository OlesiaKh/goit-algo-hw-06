import networkx as nx
import matplotlib.pyplot as plt

# Створимо граф
G = nx.Graph()

# Додамо вершини (наприклад, станції метро)
nodes = ['A', 'B', 'C', 'D', 'E', 'F', 'G']
G.add_nodes_from(nodes)

# Додамо ребра (зв'язки між станціями)
edges = [('A', 'B'), ('A', 'C'), ('B', 'D'), ('C', 'D'), ('C', 'E'), ('D', 'F'), ('E', 'F'), ('E', 'G'), ('F', 'G')]
G.add_edges_from(edges)

# Візуалізація графа
plt.figure(figsize=(10, 6))
nx.draw(G, with_labels=True, node_color='skyblue', node_size=2000, edge_color='gray')
plt.title("Transport Network Graph")
plt.show()

# Аналіз основних характеристик
num_nodes = G.number_of_nodes()
num_edges = G.number_of_edges()
degrees = dict(G.degree())

print(f"Number of nodes: {num_nodes}")
print(f"Number of edges: {num_edges}")
print("Degree of each node:", degrees)



# На основі побудованого графа транспортної мережі, ми можемо зробити такі висновки:

# 1. Кількість вершин (станцій): Граф містить 7 вершин, що представляють різні станції (A, B, C, D, E, F, G).

# 2. Кількість ребер (зв'язків між станціями): У графі є 9 ребер, які представляють зв'язки між станціями. Це дозволяє нам оцінити, наскільки добре з'єднані станції між собою.

# 3. Ступінь кожної вершини: Ступінь вершини показує кількість прямих зв'язків цієї вершини з іншими вершинами. Ось ступені для кожної вершини:
#    - A: 2
#    - B: 2
#    - C: 3
#    - D: 3
#    - E: 3
#    - F: 3
#    - G: 2

# Висновки:
# - Вершини C, D, E, і F мають найвищі ступені (по 3), що свідчить про їхнє важливе значення в транспортній мережі. Вони мають більше зв'язків з іншими станціями, що може вказувати на їхню роль як важливих пересадкових пунктів.
# - Вершини A, B, і G мають ступені 2, що свідчить про меншу кількість зв'язків з іншими станціями. Вони можуть бути кінцевими станціями або мати меншу важливість у мережі.

